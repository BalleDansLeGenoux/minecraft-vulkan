/src
 ├── Core/
 │    ├── VulkanApp.cpp
 │    ├── VulkanInstance.cpp
 │    ├── VulkanDevice.cpp
 │    ├── VulkanSwapchain.cpp
 │    ├── VulkanPipeline.cpp
 │    ├── VulkanRenderer.cpp
 │
 ├── Graphics/
 │    ├── TextureManager.cpp
 │    ├── ShaderManager.cpp
 │    ├── PipelineManager.cpp
 │    ├── BufferManager.cpp
 │
 ├── World/
 │    ├── Chunk.cpp
 │    ├── World.cpp
 │    ├── Block.cpp
 │    ├── ChunkMesh.cpp
 │
 ├── Engine/
 │    ├── Camera.cpp
 │    ├── InputManager.cpp
 │    ├── Physics.cpp
 │
 ├── UI/
 │    ├── UIManager.cpp
 │
 ├── Main.cpp


/graphics
 ├── texture_manager.cpp
 ├── material.cpp
 ├── shader_manager.cpp
 ├── mesh.cpp
 ├── model.cpp
 ├── skybox.cpp
 ├── particle_system.cpp

 mesh
 ├── Vertex
 ├── Index
 ├── Shader

Memoire GPU:
    VkBuffer chunk_charger:
        - tableau de chunk, tableau de tableau de voxel (dynamique)
        - tableau de voxel (statique, on stocke aussi les blocs vides)
        - on stocke juste le type du bloc
        - on stocke que les chunks chargés
        - coté cpu pour stocker les chunks on stocke ça position en memoire gpu
    VkBuffer vertex:


